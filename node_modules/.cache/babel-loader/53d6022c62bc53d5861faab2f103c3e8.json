{"remainingRequest":"C:\\Users\\vishn\\Downloads\\keyboard\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\vishn\\Downloads\\keyboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\vishn\\Downloads\\keyboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\vishn\\Downloads\\keyboard\\src\\SimpleKeyboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\vishn\\Downloads\\keyboard\\src\\SimpleKeyboard.vue","mtime":1632327798766},{"path":"C:\\Users\\vishn\\Downloads\\keyboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\vishn\\Downloads\\keyboard\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\vishn\\Downloads\\keyboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\vishn\\Downloads\\keyboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport german from \"simple-keyboard-layouts/build/layouts/german\";\nimport english from \"simple-keyboard-layouts/build/layouts/english\";\nimport french from \"simple-keyboard-layouts/build/layouts/french\";\nimport spanish from \"simple-keyboard-layouts/build/layouts/spanish\";\nimport chinese from \"simple-keyboard-layouts/build/layouts/chinese\";\nimport Keyboard from \"simple-keyboard\";\nimport \"simple-keyboard/build/css/index.css\";\nexport default {\n  name: \"SimpleKeyboard\",\n  props: {\n    language: String\n  },\n  data: () => ({\n    keyboard: null,\n    layout: english,\n    buttonTheme: [{\n      class: \"hg-red\",\n      buttons: \"Q W E R T Y q w e r t y\"\n    }, {\n      class: \"hg-highlight\",\n      buttons: \"Q q\"\n    }]\n  }),\n\n  mounted() {\n    this.createKeyboard();\n  },\n\n  activated() {\n    this.keyboard.setOptions({\n      layout: this.language\n    });\n  },\n\n  methods: {\n    createKeyboard() {\n      this.keyboard = new Keyboard({\n        onChange: this.onChange,\n        onKeyPress: this.onKeyPress,\n        layout: this.layout\n      });\n      this.setKeyboardInput(this.input);\n    },\n\n    setValue: function (value) {\n      this.value = value;\n\n      if (this.value == \"english\") {\n        this.keyboard.setOptions({\n          layout: english\n        });\n      } else if (this.value == \"german\") {\n        this.keyboard.setOptions({\n          layout: german\n        });\n      } else if (this.value == \"french\") {\n        this.keyboard.setOptions({\n          layout: french\n        });\n      } else if (this.value == \"spanish\") {\n        this.keyboard.setOptions({\n          layout: spanish\n        });\n      } else if (this.value == \"chinese\") {\n        this.keyboard.setOptions({\n          layout: chinese\n        });\n      }\n    },\n\n    onChange(input) {\n      this.$emit(\"onChange\", input);\n    },\n\n    onKeyPress(button) {\n      this.$emit(\"onKeyPress\", button);\n\n      if (button === \"{shift}\" || button === \"{lock}\") {\n        this.handleShift();\n      }\n    },\n\n    handleShift() {\n      const currentLayout = this.keyboard.options.layoutName;\n      const shiftToggle = currentLayout === \"default\" ? \"shift\" : \"default\";\n      this.keyboard.setOptions({\n        layoutName: shiftToggle\n      });\n    },\n\n    setKeyboardInput(input) {\n      this.keyboard.setInput(input);\n    },\n\n    hideKeyboard() {\n      this.$emit(\"closeKeyboard\");\n    }\n\n  },\n  watch: {\n    input(input) {\n      this.setKeyboardInput(input);\n    }\n\n  }\n};",{"version":3,"sources":["SimpleKeyboard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div>\n      <div class=\"simple-keyboard\"></div>\n    </div>\n\n\n  </div>\n</template>\n\n<script>\nimport german from \"simple-keyboard-layouts/build/layouts/german\";\nimport english from \"simple-keyboard-layouts/build/layouts/english\";\nimport french from \"simple-keyboard-layouts/build/layouts/french\";\nimport spanish from \"simple-keyboard-layouts/build/layouts/spanish\";\nimport chinese from \"simple-keyboard-layouts/build/layouts/chinese\";\n\n\nimport Keyboard from \"simple-keyboard\";\nimport \"simple-keyboard/build/css/index.css\";\n\nexport default {\n  name: \"SimpleKeyboard\",\n  props: {\n     language : String\n   },\n  data: () => ({\n    keyboard: null,\n    layout: english,\n    buttonTheme: [\n    {\n      class: \"hg-red\",\n      buttons: \"Q W E R T Y q w e r t y\"\n    },\n    {\n      class: \"hg-highlight\",\n      buttons: \"Q q\"\n    }\n  ]\n  }),\n  mounted() {\n    this.createKeyboard();\n\n\n\n  },\n  activated(){\n      this.keyboard.setOptions({ layout: this.language });\n  },\n  methods: {\n    createKeyboard() {\n      this.keyboard = new Keyboard({\n        onChange: this.onChange,\n        onKeyPress: this.onKeyPress,\n        layout: this.layout,\n      });\n\n      this.setKeyboardInput(this.input);\n    },\n     setValue: function(value) {\n        this.value = value;\n        if(this.value == \"english\"){\n                this.keyboard.setOptions({ layout: english });\n\n        }\n            else if(this.value == \"german\"){\n                this.keyboard.setOptions({ layout: german });\n\n        }\n             else if(this.value == \"french\"){\n                this.keyboard.setOptions({ layout: french });\n\n        }\n             else if(this.value == \"spanish\"){\n                this.keyboard.setOptions({ layout: spanish });\n\n        }\n             else if(this.value == \"chinese\"){\n                this.keyboard.setOptions({ layout: chinese });\n\n        }\n\n    },\n    onChange(input) {\n      this.$emit(\"onChange\", input);\n    },\n    onKeyPress(button) {\n      this.$emit(\"onKeyPress\", button);\n\n      if (button === \"{shift}\" || button === \"{lock}\") {\n        this.handleShift();\n      }\n    },\n    handleShift() {\n      const currentLayout = this.keyboard.options.layoutName;\n      const shiftToggle = currentLayout === \"default\" ? \"shift\" : \"default\";\n\n      this.keyboard.setOptions({\n        layoutName: shiftToggle,\n      });\n    },\n    setKeyboardInput(input) {\n      this.keyboard.setInput(input);\n    },\n    hideKeyboard() {\n      this.$emit(\"closeKeyboard\");\n    },\n  },\n  watch: {\n    input(input) {\n      this.setKeyboardInput(input);\n    },\n  },\n};\n</script>\n\n<style scoped>\nbutton {\n  background-color: tomato;\n  border: none;\n  border-radius: 4px;\n  color: #fff;\n  padding: 0.5em;\n  cursor: pointer;\n}\n.hg-theme-default{\nbackground: #642d82;\n}\n.hg-standardBtn{\n  background: #322e2b!important;\n}\n.hg-button span{\n  color: #fff;\n}\n\n</style>"],"sourceRoot":"src"}]}