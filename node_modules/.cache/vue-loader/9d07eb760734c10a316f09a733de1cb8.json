{"remainingRequest":"C:\\Users\\vishn\\Downloads\\keyboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\vishn\\Downloads\\keyboard\\src\\SimpleKeyboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\vishn\\Downloads\\keyboard\\src\\SimpleKeyboard.vue","mtime":1632327798766},{"path":"C:\\Users\\vishn\\Downloads\\keyboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\vishn\\Downloads\\keyboard\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\vishn\\Downloads\\keyboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\vishn\\Downloads\\keyboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport german from \"simple-keyboard-layouts/build/layouts/german\";\nimport english from \"simple-keyboard-layouts/build/layouts/english\";\nimport french from \"simple-keyboard-layouts/build/layouts/french\";\nimport spanish from \"simple-keyboard-layouts/build/layouts/spanish\";\nimport chinese from \"simple-keyboard-layouts/build/layouts/chinese\";\n\n\nimport Keyboard from \"simple-keyboard\";\nimport \"simple-keyboard/build/css/index.css\";\n\nexport default {\n  name: \"SimpleKeyboard\",\n  props: {\n     language : String\n   },\n  data: () => ({\n    keyboard: null,\n    layout: english,\n    buttonTheme: [\n    {\n      class: \"hg-red\",\n      buttons: \"Q W E R T Y q w e r t y\"\n    },\n    {\n      class: \"hg-highlight\",\n      buttons: \"Q q\"\n    }\n  ]\n  }),\n  mounted() {\n    this.createKeyboard();\n\n\n\n  },\n  activated(){\n      this.keyboard.setOptions({ layout: this.language });\n  },\n  methods: {\n    createKeyboard() {\n      this.keyboard = new Keyboard({\n        onChange: this.onChange,\n        onKeyPress: this.onKeyPress,\n        layout: this.layout,\n      });\n\n      this.setKeyboardInput(this.input);\n    },\n     setValue: function(value) {\n        this.value = value;\n        if(this.value == \"english\"){\n                this.keyboard.setOptions({ layout: english });\n\n        }\n            else if(this.value == \"german\"){\n                this.keyboard.setOptions({ layout: german });\n\n        }\n             else if(this.value == \"french\"){\n                this.keyboard.setOptions({ layout: french });\n\n        }\n             else if(this.value == \"spanish\"){\n                this.keyboard.setOptions({ layout: spanish });\n\n        }\n             else if(this.value == \"chinese\"){\n                this.keyboard.setOptions({ layout: chinese });\n\n        }\n\n    },\n    onChange(input) {\n      this.$emit(\"onChange\", input);\n    },\n    onKeyPress(button) {\n      this.$emit(\"onKeyPress\", button);\n\n      if (button === \"{shift}\" || button === \"{lock}\") {\n        this.handleShift();\n      }\n    },\n    handleShift() {\n      const currentLayout = this.keyboard.options.layoutName;\n      const shiftToggle = currentLayout === \"default\" ? \"shift\" : \"default\";\n\n      this.keyboard.setOptions({\n        layoutName: shiftToggle,\n      });\n    },\n    setKeyboardInput(input) {\n      this.keyboard.setInput(input);\n    },\n    hideKeyboard() {\n      this.$emit(\"closeKeyboard\");\n    },\n  },\n  watch: {\n    input(input) {\n      this.setKeyboardInput(input);\n    },\n  },\n};\n",{"version":3,"sources":["SimpleKeyboard.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SimpleKeyboard.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div>\n    <div>\n      <div class=\"simple-keyboard\"></div>\n    </div>\n\n\n  </div>\n</template>\n\n<script>\nimport german from \"simple-keyboard-layouts/build/layouts/german\";\nimport english from \"simple-keyboard-layouts/build/layouts/english\";\nimport french from \"simple-keyboard-layouts/build/layouts/french\";\nimport spanish from \"simple-keyboard-layouts/build/layouts/spanish\";\nimport chinese from \"simple-keyboard-layouts/build/layouts/chinese\";\n\n\nimport Keyboard from \"simple-keyboard\";\nimport \"simple-keyboard/build/css/index.css\";\n\nexport default {\n  name: \"SimpleKeyboard\",\n  props: {\n     language : String\n   },\n  data: () => ({\n    keyboard: null,\n    layout: english,\n    buttonTheme: [\n    {\n      class: \"hg-red\",\n      buttons: \"Q W E R T Y q w e r t y\"\n    },\n    {\n      class: \"hg-highlight\",\n      buttons: \"Q q\"\n    }\n  ]\n  }),\n  mounted() {\n    this.createKeyboard();\n\n\n\n  },\n  activated(){\n      this.keyboard.setOptions({ layout: this.language });\n  },\n  methods: {\n    createKeyboard() {\n      this.keyboard = new Keyboard({\n        onChange: this.onChange,\n        onKeyPress: this.onKeyPress,\n        layout: this.layout,\n      });\n\n      this.setKeyboardInput(this.input);\n    },\n     setValue: function(value) {\n        this.value = value;\n        if(this.value == \"english\"){\n                this.keyboard.setOptions({ layout: english });\n\n        }\n            else if(this.value == \"german\"){\n                this.keyboard.setOptions({ layout: german });\n\n        }\n             else if(this.value == \"french\"){\n                this.keyboard.setOptions({ layout: french });\n\n        }\n             else if(this.value == \"spanish\"){\n                this.keyboard.setOptions({ layout: spanish });\n\n        }\n             else if(this.value == \"chinese\"){\n                this.keyboard.setOptions({ layout: chinese });\n\n        }\n\n    },\n    onChange(input) {\n      this.$emit(\"onChange\", input);\n    },\n    onKeyPress(button) {\n      this.$emit(\"onKeyPress\", button);\n\n      if (button === \"{shift}\" || button === \"{lock}\") {\n        this.handleShift();\n      }\n    },\n    handleShift() {\n      const currentLayout = this.keyboard.options.layoutName;\n      const shiftToggle = currentLayout === \"default\" ? \"shift\" : \"default\";\n\n      this.keyboard.setOptions({\n        layoutName: shiftToggle,\n      });\n    },\n    setKeyboardInput(input) {\n      this.keyboard.setInput(input);\n    },\n    hideKeyboard() {\n      this.$emit(\"closeKeyboard\");\n    },\n  },\n  watch: {\n    input(input) {\n      this.setKeyboardInput(input);\n    },\n  },\n};\n</script>\n\n<style scoped>\nbutton {\n  background-color: tomato;\n  border: none;\n  border-radius: 4px;\n  color: #fff;\n  padding: 0.5em;\n  cursor: pointer;\n}\n.hg-theme-default{\nbackground: #642d82;\n}\n.hg-standardBtn{\n  background: #322e2b!important;\n}\n.hg-button span{\n  color: #fff;\n}\n\n</style>"]}]}